name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # Use the Python version your project requires

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Install pytest explicitly

      - name: Run tests
        env:
          dbstr: ${{ secrets.dbstr }}  # Use MongoDB connection string from secrets
          dcbot: ${{ secrets.dcbot }}  # Use Discord bot token from secrets
        run: |
          python -m pytest  # Run tests

      - name: Lint code
        run: |
          pip install flake8 black
          flake8 .  # Check for PEP8 compliance
          black --check .  # Check code formatting

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure tests pass before deploying
    if: github.ref == 'refs/heads/main'  # Only deploy on pushes to main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to server (optional)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Add your SSH private key to GitHub Secrets
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}  # Add your server's IP/hostname to GitHub Secrets
          REMOTE_USER: ${{ secrets.REMOTE_USER }}  # Add your server's username to GitHub Secrets
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}  # Add your server's deployment directory to GitHub Secrets
          dbstr: ${{ secrets.dbstr }}  # Use MongoDB connection string from secrets
          dcbot: ${{ secrets.dcbot }}  # Use Discord bot token from secrets
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
          rsync -avz --delete . $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR
          ssh $REMOTE_USER@$REMOTE_HOST "cd $REMOTE_DIR && pm2 restart main.py"  # Restart the bot using PM2
